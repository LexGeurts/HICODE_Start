email_management:
  name: email_management
  description: Flow for managing and organizing emails
  steps:
    - id: start_management
      type: message
      message: I can help you organize your inbox. What would you like to do with your emails?
      next: management_options
    
    - id: management_options
      type: router
      conditions:
        - condition: intent == 'organize_by_folder'
          next: organize_folders
        - condition: intent == 'filter_emails'
          next: filter_emails
        - condition: intent == 'mark_as_read'
          next: mark_read
        - condition: intent == 'delete_emails'
          next: delete_emails
      default: management_calm_fallback
    
    - id: organize_folders
      type: calm
      model: openai/gpt-3.5-turbo
      system_prompt: You are helping the user organize emails into folders. Explain how the emails can be categorized and ask which categories they want to create.
      next: collect_folder_info
    
    - id: collect_folder_info
      type: slot
      slot: folder_categories
      prompt: What categories would you like to organize your emails into?
      next: confirm_folders
    
    - id: confirm_folders
      type: message
      message: Great! I'll organize your emails into these folders: {folder_categories}. In a real implementation, this would connect to your email service and create the folders for you.
      next: management_complete
    
    - id: filter_emails
      type: slot
      slot: filter_criteria
      prompt: What criteria would you like to filter your emails by? (e.g., sender, date, subject)
      next: apply_filter
    
    - id: apply_filter
      type: calm
      model: openai/gpt-3.5-turbo
      system_prompt: You are helping the user filter emails based on their criteria: {filter_criteria}. Explain how the filtering would work in a real email system.
      next: management_complete
    
    - id: mark_read
      type: slot
      slot: emails_to_mark
      prompt: Which emails would you like to mark as read? (all unread, from a specific sender, etc.)
      next: confirm_mark_read
    
    - id: confirm_mark_read
      type: message
      message: I've marked the following emails as read: {emails_to_mark}. In a real implementation, this would update the status in your email account.
      next: management_complete
    
    - id: delete_emails
      type: slot
      slot: emails_to_delete
      prompt: Which emails would you like to delete? Please be specific.
      next: confirm_delete
    
    - id: confirm_delete
      type: confirmation
      message: Are you sure you want to delete emails matching: {emails_to_delete}?
      confirmed: perform_delete
      denied: cancel_delete
    
    - id: perform_delete
      type: message
      message: I've moved the specified emails to trash. In a real implementation, this would delete them from your inbox.
      next: management_complete
    
    - id: cancel_delete
      type: message
      message: Delete operation canceled. Your emails remain unchanged.
      next: management_complete
    
    - id: management_calm_fallback
      type: calm
      model: openai/gpt-3.5-turbo
      system_prompt: You are MailoBot, helping with email management. The user has asked something about managing emails, but it doesn't match our predefined intents. Respond helpfully based on their email management request.
      next: management_complete
    
    - id: management_complete
      type: message
      message: Is there anything else you'd like to do with your emails?
      next: "END"
